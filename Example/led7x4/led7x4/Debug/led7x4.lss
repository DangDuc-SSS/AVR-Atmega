
led7x4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001c6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000a  00800060  000001c6  0000025a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000007  0080006a  0080006a  00000264  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000264  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000294  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000028  00000000  00000000  000002d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000007f1  00000000  00000000  000002f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000649  00000000  00000000  00000ae9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000002d4  00000000  00000000  00001132  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000040  00000000  00000000  00001408  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000362  00000000  00000000  00001448  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000001d6  00000000  00000000  000017aa  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000018  00000000  00000000  00001980  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e6 ec       	ldi	r30, 0xC6	; 198
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	aa 36       	cpi	r26, 0x6A	; 106
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	aa e6       	ldi	r26, 0x6A	; 106
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a1 37       	cpi	r26, 0x71	; 113
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 a5 00 	call	0x14a	; 0x14a <main>
  8a:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <_Z7hienthii>:
	unsigned int x;
    unsigned char number[10] = {0xC0, 0xF9, 0xA4, 0xB0, 0x99, 0x92, 0x82, 0xF8, 0x80, 0x90};
	unsigned char m[4], i ;

void hienthi(int x)
{
  92:	cf 93       	push	r28
  94:	df 93       	push	r29
	PORTC= 0xFF;
  96:	2f ef       	ldi	r18, 0xFF	; 255
  98:	25 bb       	out	0x15, r18	; 21
	DDRC = 0xFF;
  9a:	24 bb       	out	0x14, r18	; 20
	PORTD= 0xFF;
  9c:	22 bb       	out	0x12, r18	; 18
	DDRD = 0xFF;
  9e:	21 bb       	out	0x11, r18	; 17
  a0:	eb e6       	ldi	r30, 0x6B	; 107
  a2:	f0 e0       	ldi	r31, 0x00	; 0
  a4:	cf e6       	ldi	r28, 0x6F	; 111
  a6:	d0 e0       	ldi	r29, 0x00	; 0
	int temp;
	temp = x ;
	// tach 4 so luu vao 4 bien
	for (i=0 ; i < 4; i++)
	{
		m[i]= temp % 10 ;
  a8:	2a e0       	ldi	r18, 0x0A	; 10
  aa:	30 e0       	ldi	r19, 0x00	; 0
  ac:	b9 01       	movw	r22, r18
  ae:	0e 94 b9 00 	call	0x172	; 0x172 <__divmodhi4>
  b2:	81 93       	st	Z+, r24
		temp= temp / 10 ;
  b4:	86 2f       	mov	r24, r22
  b6:	97 2f       	mov	r25, r23
	PORTD= 0xFF;
	DDRD = 0xFF;
	int temp;
	temp = x ;
	// tach 4 so luu vao 4 bien
	for (i=0 ; i < 4; i++)
  b8:	ce 17       	cp	r28, r30
  ba:	df 07       	cpc	r29, r31
  bc:	b9 f7       	brne	.-18     	; 0xac <_Z7hienthii+0x1a>
  be:	84 e0       	ldi	r24, 0x04	; 4
  c0:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <__data_end>
	{
		m[i]= temp % 10 ;
		temp= temp / 10 ;
	}
	
		cbi(PORTC,0);
  c4:	a8 98       	cbi	0x15, 0	; 21
		PORTD = number[m[3]] ;
  c6:	ab e6       	ldi	r26, 0x6B	; 107
  c8:	b0 e0       	ldi	r27, 0x00	; 0
  ca:	13 96       	adiw	r26, 0x03	; 3
  cc:	ec 91       	ld	r30, X
  ce:	13 97       	sbiw	r26, 0x03	; 3
  d0:	f0 e0       	ldi	r31, 0x00	; 0
  d2:	e0 5a       	subi	r30, 0xA0	; 160
  d4:	ff 4f       	sbci	r31, 0xFF	; 255
  d6:	80 81       	ld	r24, Z
  d8:	82 bb       	out	0x12, r24	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  da:	8f e9       	ldi	r24, 0x9F	; 159
  dc:	9f e0       	ldi	r25, 0x0F	; 15
  de:	01 97       	sbiw	r24, 0x01	; 1
  e0:	f1 f7       	brne	.-4      	; 0xde <_Z7hienthii+0x4c>
  e2:	00 c0       	rjmp	.+0      	; 0xe4 <_Z7hienthii+0x52>
  e4:	00 00       	nop
		_delay_ms(1);
		sbi(PORTC,0);
  e6:	a8 9a       	sbi	0x15, 0	; 21
		
		cbi(PORTC,1);
  e8:	a9 98       	cbi	0x15, 1	; 21
		PORTD = number[m[2]] ;
  ea:	12 96       	adiw	r26, 0x02	; 2
  ec:	ec 91       	ld	r30, X
  ee:	12 97       	sbiw	r26, 0x02	; 2
  f0:	f0 e0       	ldi	r31, 0x00	; 0
  f2:	e0 5a       	subi	r30, 0xA0	; 160
  f4:	ff 4f       	sbci	r31, 0xFF	; 255
  f6:	80 81       	ld	r24, Z
  f8:	82 bb       	out	0x12, r24	; 18
  fa:	8f e9       	ldi	r24, 0x9F	; 159
  fc:	9f e0       	ldi	r25, 0x0F	; 15
  fe:	01 97       	sbiw	r24, 0x01	; 1
 100:	f1 f7       	brne	.-4      	; 0xfe <_Z7hienthii+0x6c>
 102:	00 c0       	rjmp	.+0      	; 0x104 <_Z7hienthii+0x72>
 104:	00 00       	nop
		_delay_ms(1);
		sbi(PORTC,1);
 106:	a9 9a       	sbi	0x15, 1	; 21
		
		cbi(PORTC,2);
 108:	aa 98       	cbi	0x15, 2	; 21
		PORTD = number[m[1]] ;
 10a:	11 96       	adiw	r26, 0x01	; 1
 10c:	ec 91       	ld	r30, X
 10e:	11 97       	sbiw	r26, 0x01	; 1
 110:	f0 e0       	ldi	r31, 0x00	; 0
 112:	e0 5a       	subi	r30, 0xA0	; 160
 114:	ff 4f       	sbci	r31, 0xFF	; 255
 116:	80 81       	ld	r24, Z
 118:	82 bb       	out	0x12, r24	; 18
 11a:	8f e9       	ldi	r24, 0x9F	; 159
 11c:	9f e0       	ldi	r25, 0x0F	; 15
 11e:	01 97       	sbiw	r24, 0x01	; 1
 120:	f1 f7       	brne	.-4      	; 0x11e <_Z7hienthii+0x8c>
 122:	00 c0       	rjmp	.+0      	; 0x124 <_Z7hienthii+0x92>
 124:	00 00       	nop
		_delay_ms(1);
		sbi(PORTC,2);
 126:	aa 9a       	sbi	0x15, 2	; 21
		
		cbi(PORTC,3);
 128:	ab 98       	cbi	0x15, 3	; 21
		PORTD = number[m[0]] ;
 12a:	ec 91       	ld	r30, X
 12c:	f0 e0       	ldi	r31, 0x00	; 0
 12e:	e0 5a       	subi	r30, 0xA0	; 160
 130:	ff 4f       	sbci	r31, 0xFF	; 255
 132:	80 81       	ld	r24, Z
 134:	82 bb       	out	0x12, r24	; 18
 136:	8f e9       	ldi	r24, 0x9F	; 159
 138:	9f e0       	ldi	r25, 0x0F	; 15
 13a:	01 97       	sbiw	r24, 0x01	; 1
 13c:	f1 f7       	brne	.-4      	; 0x13a <_Z7hienthii+0xa8>
 13e:	00 c0       	rjmp	.+0      	; 0x140 <_Z7hienthii+0xae>
 140:	00 00       	nop
		_delay_ms(1);
		sbi(PORTC,3);
 142:	ab 9a       	sbi	0x15, 3	; 21
}
 144:	df 91       	pop	r29
 146:	cf 91       	pop	r28
 148:	08 95       	ret

0000014a <main>:
int main(void)
{
 14a:	c0 e1       	ldi	r28, 0x10	; 16
 14c:	d0 e0       	ldi	r29, 0x00	; 0
    /* Replace with your application code */
    while (1) 
    {
		{
			for (int j=0 ; j<= 15 ; j++)
			hienthi(x);
 14e:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <x>
 152:	90 91 70 00 	lds	r25, 0x0070	; 0x800070 <x+0x1>
 156:	0e 94 49 00 	call	0x92	; 0x92 <_Z7hienthii>
 15a:	21 97       	sbiw	r28, 0x01	; 1
{
    /* Replace with your application code */
    while (1) 
    {
		{
			for (int j=0 ; j<= 15 ; j++)
 15c:	c1 f7       	brne	.-16     	; 0x14e <main+0x4>
			hienthi(x);
		}
		x++;
 15e:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <x>
 162:	90 91 70 00 	lds	r25, 0x0070	; 0x800070 <x+0x1>
 166:	01 96       	adiw	r24, 0x01	; 1
 168:	90 93 70 00 	sts	0x0070, r25	; 0x800070 <x+0x1>
 16c:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <x>
		sbi(PORTC,3);
}
int main(void)
{
    /* Replace with your application code */
    while (1) 
 170:	ec cf       	rjmp	.-40     	; 0x14a <main>

00000172 <__divmodhi4>:
 172:	97 fb       	bst	r25, 7
 174:	07 2e       	mov	r0, r23
 176:	16 f4       	brtc	.+4      	; 0x17c <__divmodhi4+0xa>
 178:	00 94       	com	r0
 17a:	07 d0       	rcall	.+14     	; 0x18a <__divmodhi4_neg1>
 17c:	77 fd       	sbrc	r23, 7
 17e:	09 d0       	rcall	.+18     	; 0x192 <__divmodhi4_neg2>
 180:	0e 94 cd 00 	call	0x19a	; 0x19a <__udivmodhi4>
 184:	07 fc       	sbrc	r0, 7
 186:	05 d0       	rcall	.+10     	; 0x192 <__divmodhi4_neg2>
 188:	3e f4       	brtc	.+14     	; 0x198 <__divmodhi4_exit>

0000018a <__divmodhi4_neg1>:
 18a:	90 95       	com	r25
 18c:	81 95       	neg	r24
 18e:	9f 4f       	sbci	r25, 0xFF	; 255
 190:	08 95       	ret

00000192 <__divmodhi4_neg2>:
 192:	70 95       	com	r23
 194:	61 95       	neg	r22
 196:	7f 4f       	sbci	r23, 0xFF	; 255

00000198 <__divmodhi4_exit>:
 198:	08 95       	ret

0000019a <__udivmodhi4>:
 19a:	aa 1b       	sub	r26, r26
 19c:	bb 1b       	sub	r27, r27
 19e:	51 e1       	ldi	r21, 0x11	; 17
 1a0:	07 c0       	rjmp	.+14     	; 0x1b0 <__udivmodhi4_ep>

000001a2 <__udivmodhi4_loop>:
 1a2:	aa 1f       	adc	r26, r26
 1a4:	bb 1f       	adc	r27, r27
 1a6:	a6 17       	cp	r26, r22
 1a8:	b7 07       	cpc	r27, r23
 1aa:	10 f0       	brcs	.+4      	; 0x1b0 <__udivmodhi4_ep>
 1ac:	a6 1b       	sub	r26, r22
 1ae:	b7 0b       	sbc	r27, r23

000001b0 <__udivmodhi4_ep>:
 1b0:	88 1f       	adc	r24, r24
 1b2:	99 1f       	adc	r25, r25
 1b4:	5a 95       	dec	r21
 1b6:	a9 f7       	brne	.-22     	; 0x1a2 <__udivmodhi4_loop>
 1b8:	80 95       	com	r24
 1ba:	90 95       	com	r25
 1bc:	bc 01       	movw	r22, r24
 1be:	cd 01       	movw	r24, r26
 1c0:	08 95       	ret

000001c2 <_exit>:
 1c2:	f8 94       	cli

000001c4 <__stop_program>:
 1c4:	ff cf       	rjmp	.-2      	; 0x1c4 <__stop_program>
